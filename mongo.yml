AWSTemplateFormatVersion: "2010-09-09"
Description: "(000F) Deploy MongoDB Replica Set on AWS (Existing VPC)"

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Network Configuration
      Parameters:
        - VPC
        - PrimaryNodeSubnet
        - Secondary0NodeSubnet
        - Secondary1NodeSubnet
        - BastionSecurityGroupID
    - Label:
        default: Security Configuration
      Parameters:
        - KeyPairName
    - Label:
        default: MongoDB Database Configuration
      Parameters:
        - ClusterReplicaSetCount
        - Iops
        - MongoDBVersion
        - MongoDBAdminUsername
        - MongoDBAdminPassword
        - NodeInstanceType
        - ReplicaShardIndex
        - VolumeSize
        - VolumeType
    - Label:
        default: AWS Quick Start Configuration
      Parameters:
        - QSS3BucketName
        - QSS3KeyPrefix

    - ParameterLabels:
        BastionSecurityGroupID:
          default: Bastion Security Group ID
        ClusterReplicaSetCount:
          default: Cluster Replica Set Count
        Iops:
          default: Iops
        KeyPairName:
          default: Key Pair Name
        MongoDBAdminPassword:
          default: MongoDB Admin Password
        MongoDBAdminUsername:
          default: MongoDB Admin Username
        MongoDBVersion:
          default: MongoDB Version
        NodeInstanceType:
          default: Node Instance Type
        PrimaryNodeSubnet:
          default: Primary Node Subnet
        QSS3BucketName:
          default: Quick Start S3 Bucket Name
        QSS3KeyPrefix:
          default: Quick Start S3 Key Prefix
        ReplicaShardIndex:
          default: Replica Shard Index
        Secondary0NodeSubnet:
          default: Secondary0 Node Subnet
        Secondary1NodeSubnet:
          default: Secondary1 Node Subnet
        VPC:
          default: VPC
        VolumeSize:
          default: Volume Size
        VolumeType:
          default: Volume Type

  Stack:
    Value: 0
  VersionDate:
    Value: 20160518
  Identifier:
    Value: main
  Input:
    Description: Input of all required parameters in nested stacks
  Output:
    Description: N/A

Parameters:
  BastionSecurityGroupID:
    Type: AWS::EC2::SecurityGroup::Id
    Description: ID of the Bastion Security Group (e.g., sg-7f16e910)
    Default: sg-02668080abee37573
  ClusterReplicaSetCount:
    Type: String
    Description: Number of Replica Set Members. Choose 1 or 3
    Default: 3
    AllowedValues:
      - 1
      - 3
  MongoDBVersion:
    Type: String
    Description: MongoDB version
    Default: 4.0
    AllowedValues:
      - 4.0
      - 3.6
      - 3.4
      - 3.2
  MongoDBAdminUsername:
    Type: String
    Default: admin
    Description: MongoDB admin account username
    NoEcho: true
    MinLength: 1
    MaxLength: 16
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters
  MongoDBAdminPassword:
    Type: String
    Default: GrVdCI83Hkt8
    Description: "Enter your MongoDB Database Password, Min 8, maximum of 32 characters."
    NoEcho: true
    AllowedPattern: "([A-Za-z0-9_@-]{8,32})"
    ConstraintDescription: "Input your MongoDB database password, Min 8, Maximum of 32 characters. . Allowed characters are [A-Za-z0-9_@-]"
  ReplicaShardIndex:
    Type: String
    Description: Shard Index of this replica set
    Default: 0
  QSS3BucketName:
    Type: String
    Default: brayest-us-wes-1
    Description: "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
    AllowedPattern: "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$"
    ConstraintDescription: "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
  QSS3KeyPrefix:
    Type: String
    Default: Mongo
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with a hyphen (-).
    AllowedPattern: "^[0-9a-zA-Z-/]*$"
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).
  KeyPairName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: "Name of an existing EC2 KeyPair. MongoDB instances will launch with this KeyPair."
    Default: brayest-us-west-1
  VolumeSize:
    Type: String
    Description: "EBS Volume Size (data) to be attached to node in GBs"
    Default: 400
  VolumeType:
    Type: String
    Description: EBS Volume Type (data) to be attached to node in GBs [io1,gp2]"
    Default: gp2
    AllowedValues:
      - gp2
      - io1
  Iops:
    Type: String
    Description: "Iops of EBS volume when io1 type is chosen. Otherwise ignored"
    Default: 100
  NodeInstanceType:
    Type: String
    Description: "Amazon EC2 instance type for the MongoDB nodes."
    Default: m4.large
    AllowedValues:
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - m5.24xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - x1.16xlarge
      - x1.32xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - x1e.32xlarge
      - x1e.16xlarge
      - x1e.8xlarge
      - x1e.4xlarge
      - x1e.2xlarge
      - x1e.xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
  VPC:
    Type: AWS::EC2::VPC::Id
    Description: VPC-ID of your existing Virtual Private Cloud (VPC) where you want to depoy MongoDB cluster.
    Default: vpc-0578a459fb657167d
  PrimaryNodeSubnet:
    Type: AWS::EC2::Subnet::Id
    Description: Subnet-ID the existing subnet in your VPC where you want to deploy Primary node(s).
    Default: subnet-04fa611a94854723c
  Secondary0NodeSubnet:
    Type: AWS::EC2::Subnet::Id
    Description: Subnet-ID the existing subnet in your VPC where you want to deploy Secondary node(s).
    Default: subnet-04fa611a94854723c
  Secondary1NodeSubnet:
    Type: AWS::EC2::Subnet::Id
    Description: Subnet-ID the existing subnet in your VPC where you want to deploy Secondary node(s).
    Default: subnet-04fa611a94854723c


Conditions:
  CreateThreeReplicaSet: !Equals [!Ref ClusterReplicaSetCount, "3"]

Mappings:
  AWSAMIRegionMap:
  # https://aws.amazon.com/es/amazon-linux-ami/
    us-east-2:
      AMZNLINUX: ami-0b59bfac6be064b78
    us-east-1:
      AMZNLINUX: ami-0ff8a91507f77f867
    us-west-2:
      AMZNLINUX: ami-a0cfeed8
    us-west-1:
      AMZNLINUX: ami-0bdb828fd58c52235

Outputs:
  PrimaryReplicaNodeIp:
    Value: !GetAtt [PrimaryReplicaNode0, Outputs.NodePrivateIp]
    Description: Private IP Address of Primary Replica Node
  SecondaryReplicaNode0Ip:
    Value: !GetAtt [SecondaryReplicaNode0, Outputs.NodePrivateIp]
    Description: Private IP Address of Secondary Replica 0 Node
    Condition: CreateThreeReplicaSet
  SecondaryReplicaNode1Ip:
    Value: !GetAtt [SecondaryReplicaNode1, Outputs.NodePrivateIp]
    Description: Private IP Address of Secondary Replica 1 Node
    Condition: CreateThreeReplicaSet
  MongoDBServerAccessSecurityGroup:
    Value: !Ref MongoDBServerAccessSecurityGroup
    Description: MongoDB Access Security Group

Resources:
  MongoDBServerAccessSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Instances with access to MongoDB servers

  MongoDBServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: MongoDB server management and access ports
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 27017
          ToPort: 27030
          SourceSecurityGroupId: !Ref MongoDBServerAccessSecurityGroup
        - IpProtocol: tcp
          FromPort: 28017
          ToPort: 28017
          SourceSecurityGroupId: !Ref MongoDBServerAccessSecurityGroup

  MongoDBServersSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: MongoDB inter-server communication and management ports
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          SourceSecurityGroupId: !Ref MongoDBServerSecurityGroup
        - IpProtocol: tcp
          FromPort: 27017
          ToPort: 27030
          SourceSecurityGroupId: !Ref MongoDBServerSecurityGroup
        - IpProtocol: tcp
          FromPort: 28017
          ToPort: 28017
          SourceSecurityGroupId: !Ref MongoDBServerSecurityGroup

  MongoDBNodeIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: "mongodb-quickstart-policy"
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - ec2:Describe*
                  - ec2:AttachNetworkInterface
                  - ec2:AttachVolume
                  - ec2:CreateTags
                  - ec2:CreateVolume
                  - ec2:RunInstances
                  - ec2:StartInstances
                  - ec2:DeleteVolume
                  - ec2:CreateSecurityGroup
                  - ec2:CreateSnapshot
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource: !Sub "arn:aws:s3:::${QSS3BucketName}/${QSS3KeyPrefix}*"
              - Effect: Allow
                Action:
                  - dynamodb:BatchGetItem
                  - dynamodb:CreateTable
                  - dynamodb:DeleteTable
                  - dynamodb:DescribeTable
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:Query
                  - dynamodb:Scan
                  - dynamodb:UpdateItem
                  - dynamodb:UpdateTable
                Resource:
                  - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*MONGODB_*"

  MongoDBNodeIAMProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - !Ref MongoDBNodeIAMRole

  PrimaryReplicaNode0WaitForNodeInstallWaitHandle:
    Type: AWS::CloudFormation::WaitConditionHandle

  PrimaryReplicaNode0:
    DependsOn: PrimaryReplicaNode0WaitForNodeInstallWaitHandle
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}/mongo-nodes.yml
      Parameters:
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        ClusterReplicaSetCount: !Ref ClusterReplicaSetCount
        Iops: !Ref Iops
        KeyName: !Ref KeyPairName
        MongoDBVersion: !Ref MongoDBVersion
        MongoDBAdminUsername: !Ref MongoDBAdminUsername
        MongoDBAdminPassword: !Ref MongoDBAdminPassword
        NodeInstanceType: !Ref NodeInstanceType
        NodeSubnet: !Ref PrimaryNodeSubnet
        MongoDBServerSecurityGroupID: !Ref MongoDBServerSecurityGroup
        MongoDBServersSecurityGroupID: !Ref MongoDBServersSecurityGroup
        MongoDBNodeIAMProfileID: !Ref MongoDBNodeIAMProfile
        VPC: !Ref VPC
        VolumeSize: !Ref VolumeSize
        VolumeType: !Ref VolumeType
        StackName: !Ref AWS::StackName
        ImageId: !FindInMap [AWSAMIRegionMap, !Ref "AWS::Region", AMZNLINUX]
        ReplicaNodeNameTag: PrimaryReplicaNode0
        NodeReplicaSetIndex: 0
        ReplicaShardIndex: !Ref ReplicaShardIndex
        ReplicaNodeWaitForNodeInstallWaitHandle: !Ref PrimaryReplicaNode0WaitForNodeInstallWaitHandle

  PrimaryReplicaNode0WaitForNodeInstall:
    Type: AWS::CloudFormation::WaitCondition
    DependsOn: PrimaryReplicaNode0
    Properties:
      Handle: !Ref PrimaryReplicaNode0WaitForNodeInstallWaitHandle
      Timeout: 3600

  SecondaryReplicaNode0WaitForNodeInstallWaitHandle:
    Type: AWS::CloudFormation::WaitConditionHandle
    Condition: CreateThreeReplicaSet

  SecondaryReplicaNode0:
    DependsOn: SecondaryReplicaNode0WaitForNodeInstallWaitHandle
    Condition: CreateThreeReplicaSet
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}/mongo-nodes.yml
      Parameters:
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        ClusterReplicaSetCount: !Ref ClusterReplicaSetCount
        Iops: !Ref Iops
        KeyName: !Ref KeyPairName
        MongoDBVersion: !Ref MongoDBVersion
        MongoDBAdminUsername: !Ref MongoDBAdminUsername
        MongoDBAdminPassword: !Ref MongoDBAdminPassword
        NodeInstanceType: !Ref NodeInstanceType
        NodeSubnet: !Ref PrimaryNodeSubnet
        MongoDBServerSecurityGroupID: !Ref MongoDBServerSecurityGroup
        MongoDBServersSecurityGroupID: !Ref MongoDBServersSecurityGroup
        MongoDBNodeIAMProfileID: !Ref MongoDBNodeIAMProfile
        VPC: !Ref VPC
        VolumeSize: !Ref VolumeSize
        VolumeType: !Ref VolumeType
        StackName: !Ref AWS::StackName
        ImageId: !FindInMap [AWSAMIRegionMap, !Ref "AWS::Region", AMZNLINUX]
        ReplicaNodeNameTag: SecondaryReplicaNode0
        NodeReplicaSetIndex: 1
        ReplicaShardIndex: !Ref ReplicaShardIndex
        ReplicaNodeWaitForNodeInstallWaitHandle: !Ref SecondaryReplicaNode0WaitForNodeInstallWaitHandle

  SecondaryReplicaNode0WaitForNodeInstall:
    Type: AWS::CloudFormation::WaitCondition
    Condition: CreateThreeReplicaSet
    DependsOn: SecondaryReplicaNode0
    Properties:
      Handle: !Ref SecondaryReplicaNode0WaitForNodeInstallWaitHandle
      Timeout: 3600

  SecondaryReplicaNode1WaitForNodeInstallWaitHandle:
    Type: AWS::CloudFormation::WaitConditionHandle
    Condition: CreateThreeReplicaSet


  SecondaryReplicaNode1:
    DependsOn: SecondaryReplicaNode1WaitForNodeInstallWaitHandle
    Condition: CreateThreeReplicaSet
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}/mongo-nodes.yml
      Parameters:
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        ClusterReplicaSetCount: !Ref ClusterReplicaSetCount
        Iops: !Ref Iops
        KeyName: !Ref KeyPairName
        MongoDBVersion: !Ref MongoDBVersion
        MongoDBAdminUsername: !Ref MongoDBAdminUsername
        MongoDBAdminPassword: !Ref MongoDBAdminPassword
        NodeInstanceType: !Ref NodeInstanceType
        NodeSubnet: !Ref PrimaryNodeSubnet
        MongoDBServerSecurityGroupID: !Ref MongoDBServerSecurityGroup
        MongoDBServersSecurityGroupID: !Ref MongoDBServersSecurityGroup
        MongoDBNodeIAMProfileID: !Ref MongoDBNodeIAMProfile
        VPC: !Ref VPC
        VolumeSize: !Ref VolumeSize
        VolumeType: !Ref VolumeType
        StackName: !Ref AWS::StackName
        ImageId: !FindInMap [AWSAMIRegionMap, !Ref "AWS::Region", AMZNLINUX]
        ReplicaNodeNameTag: SecondaryReplicaNode1
        NodeReplicaSetIndex: 2
        ReplicaShardIndex: !Ref ReplicaShardIndex
        ReplicaNodeWaitForNodeInstallWaitHandle: !Ref SecondaryReplicaNode1WaitForNodeInstallWaitHandle

  SecondaryReplicaNode1WaitForNodeInstall:
    Type: AWS::CloudFormation::WaitCondition
    Condition: CreateThreeReplicaSet
    DependsOn: SecondaryReplicaNode1
    Properties:
      Handle: !Ref SecondaryReplicaNode1WaitForNodeInstallWaitHandle
      Timeout: 3600
